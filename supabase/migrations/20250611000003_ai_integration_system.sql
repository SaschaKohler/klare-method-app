-- =====================================================
-- 003 - AI Integration System
-- AI-Ready Database Reconstruction - Part 3  
-- =====================================================

-- =======================================
-- AI CONVERSATION SYSTEM
-- =======================================

-- AI conversations for context awareness and coaching
CREATE TABLE IF NOT EXISTS ai_conversations (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  user_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  conversation_type TEXT NOT NULL, -- 'coaching', 'reflection', 'tfp_exercise', 'meta_model'
  messages JSONB NOT NULL DEFAULT '[]',
  context_data JSONB DEFAULT '{}',
  ai_model TEXT DEFAULT 'claude-3-sonnet',
  total_tokens INTEGER DEFAULT 0,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- AI prompt templates for dynamic content generation (TFP-enhanced)
CREATE TABLE IF NOT EXISTS ai_prompt_templates (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  name TEXT NOT NULL UNIQUE,
  template_text TEXT NOT NULL,
  variables JSONB DEFAULT '{}',
  category TEXT NOT NULL, -- 'reflection', 'guidance', 'exercise', 'tfp_technique'
  klare_step TEXT CHECK (klare_step IN ('K', 'L', 'A', 'R', 'E')),
  tfp_technique TEXT, -- 'meta_model', 'anchoring', 'timeline', 'parts_integration'
  personalization_rules JSONB DEFAULT '{}',
  effectiveness_rating DECIMAL(3,2),
  usage_count INTEGER DEFAULT 0,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Personal insights generated by AI
CREATE TABLE IF NOT EXISTS personal_insights (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  user_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  insight_type TEXT NOT NULL, -- 'breakthrough', 'pattern', 'tfp_mastery', 'meta_model_insight'
  content TEXT NOT NULL,
  confidence_score DECIMAL(3,2) CHECK (confidence_score >= 0 AND confidence_score <= 1),
  source_data JSONB DEFAULT '{}',
  ai_reasoning TEXT, -- How the AI arrived at this insight
  user_validation TEXT, -- User's response to the insight
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  acknowledged_at TIMESTAMP WITH TIME ZONE
);

-- Generated content (AI-created, personalized)
CREATE TABLE IF NOT EXISTS generated_content (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  user_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  content_key TEXT NOT NULL, -- 'k_intro_personalized', 'meta_model_challenge_1'
  content_data JSONB NOT NULL,
  generation_prompt TEXT,
  ai_model TEXT,
  quality_score DECIMAL(3,2),
  user_feedback JSONB DEFAULT '{}',
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  expires_at TIMESTAMP WITH TIME ZONE,
  UNIQUE(user_id, content_key)
);

-- AI service logs for debugging and optimization
CREATE TABLE IF NOT EXISTS ai_service_logs (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  user_id UUID REFERENCES users(id) ON DELETE SET NULL,
  service_type TEXT NOT NULL, -- 'prompt_generation', 'insight_analysis', 'content_creation'
  request_data JSONB,
  response_data JSONB,
  tokens_used INTEGER,
  response_time_ms INTEGER,
  success BOOLEAN NOT NULL,
  error_message TEXT,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- =======================================
-- INDEXES FOR AI SYSTEM
-- =======================================

CREATE INDEX IF NOT EXISTS idx_ai_conversations_user_type ON ai_conversations(user_id, conversation_type);
CREATE INDEX IF NOT EXISTS idx_ai_conversations_updated ON ai_conversations(updated_at);
CREATE INDEX IF NOT EXISTS idx_ai_prompt_templates_category ON ai_prompt_templates(category);
CREATE INDEX IF NOT EXISTS idx_ai_prompt_templates_klare_step ON ai_prompt_templates(klare_step);
CREATE INDEX IF NOT EXISTS idx_ai_prompt_templates_tfp ON ai_prompt_templates(tfp_technique);
CREATE INDEX IF NOT EXISTS idx_personal_insights_user_type ON personal_insights(user_id, insight_type);
CREATE INDEX IF NOT EXISTS idx_personal_insights_unacknowledged ON personal_insights(user_id) WHERE acknowledged_at IS NULL;
CREATE INDEX IF NOT EXISTS idx_generated_content_user_key ON generated_content(user_id, content_key);
CREATE INDEX IF NOT EXISTS idx_generated_content_expires ON generated_content(expires_at) WHERE expires_at IS NOT NULL;
CREATE INDEX IF NOT EXISTS idx_ai_service_logs_user_service ON ai_service_logs(user_id, service_type);
CREATE INDEX IF NOT EXISTS idx_ai_service_logs_created ON ai_service_logs(created_at);

-- =======================================
-- TRIGGERS
-- =======================================

DROP TRIGGER IF EXISTS update_ai_conversations_updated_at ON ai_conversations;
CREATE TRIGGER update_ai_conversations_updated_at 
  BEFORE UPDATE ON ai_conversations 
  FOR EACH ROW EXECUTE FUNCTION update_updated_at();

DROP TRIGGER IF EXISTS update_ai_prompt_templates_updated_at ON ai_prompt_templates;
CREATE TRIGGER update_ai_prompt_templates_updated_at 
  BEFORE UPDATE ON ai_prompt_templates 
  FOR EACH ROW EXECUTE FUNCTION update_updated_at();